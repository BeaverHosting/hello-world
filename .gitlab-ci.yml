variables:
  IMAGE_NAME: "hello-world"

stages :
 - build
 - test
 - deploy

build_go:
 stage: build
 image: golang:1.10-alpine
 script:
  - CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main .
 artifacts:
  paths:
  - /main

test_go:
 stage: test
 image: golang:1.10-alpine
 script:
  - go test

deploy_docker_image:
  stage: deploy
  image: docker:latest
  script:
   - docker login $REGISTRY_URL -u $REGISTRY_LOGIN -p $REGISTRY_PASSWORD
   - docker image build -t $IMAGE_NAME .
   - docker tag $IMAGE_NAME $REGISTRY_URL/$IMAGE_NAME:$CI_COMMIT_TAG
   - docker push $REGISTRY_URL/$IMAGE_NAME:$CI_COMMIT_TAG
   - docker tag $IMAGE_NAME $REGISTRY_URL/$IMAGE_NAME:latest
   - docker push $REGISTRY_URL/$IMAGE_NAME:latest
  dependencies:
   - build_go
  only:
  - tags

